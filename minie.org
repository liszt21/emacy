#+TITLE: Emacs Config
#+AUTHOR: Li Shuzhi
#+STARTUP: show2levels
#+STARTUP: noindent
#+FILETAGS: :emacy:config:emacs:emacs-lisp:
#+PROPERTY: header-args :tangle init.el :noweb yes :session init
#+AUTO_TANGLE: t

* Header
** early-init.el :early-init:
#+BEGIN_SRC emacs-lisp :tangle early-init.el
;;; early-init.el --- emacs init file  -*- lexical-binding: t; -*-
#+END_SRC

** init.el
#+BEGIN_SRC emacs-lisp
  ;;; init.el --- emacs init file  -*- lexical-binding: t; -*-
  (require 'cl-lib)
#+END_SRC

* Preset
** constant :early-init:
#+BEGIN_SRC emacs-lisp :tangle early-init.el
  (defconst windows? (memq system-type '(cygwin windows-nt ms-dos)) "are we on windows")
  (defconst macos? (eq system-type 'darwin) "are we on macos")
  (defconst linux? (memq system-type '(gnu gnu/linux gnu/kfreebds berkeley-unix)) "are we on linux")
  (defconst bsd? (memq system-type '(darwin berkeley-unix gnu/kfreebsd)) "are we on bsd")
  (defconst wsl? (and linux? (string-match-p "microsoft" operating-system-release)) "are we on wsl")
#+END_SRC

** variable
#+BEGIN_SRC emacs-lisp
  (defvar user-local-directory "~/.local/emacs/" "User's local directory for emacs, ~/.local/emacs/")
  (defvar elpaca-directory (expand-file-name "var" user-emacs-directory))
  (defvar elpaca-repos-directory (expand-file-name "libs" user-emacs-directory))
  (defvar elpaca-cache-directory (expand-file-name "menus" elpaca-directory))
  (defvar elpaca-builds-directory (expand-file-name "builds" user-local-directory))
#+END_SRC

** exec-path
#+begin_src emacs-lisp
  (setq exec-path (append '("~/.emacs.d/python/.venv/bin" "~/.emacs.d/node/node_modules/.bin") exec-path))
#+end_src
* Footer
#+BEGIN_SRC emacs-lisp :tangle early-init.el
  (provide 'early-init)
  ;;; early-init.el ends here
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (provide 'init)
  ;;; init.el ends here
#+END_SRC

